def = "doppio_picco"
if ( ! exists("filename") ) {
	print "Searching for default file ".def.".dat"
	filename = def
} else {
	print "File name ".filename.".dat"
}

set font "Helvetica,12"

# Eseguo un'analisi del file in input
stats filename.".dat" using 1

# Numero dei bin
bins = 100
# Calcolo la dimensione del bin
binwidth = ( STATS_max - STATS_min ) / bins
# Fattore di normalizzazione
Norm = STATS_records * binwidth

# Funzione per creare i bin
bin(x, width) = width * floor( x / width + .5 )

show variables all

set grid
set style fill transparent pattern 4 bo

# Fattore di scala per il dominio
#scale = 1.1
#max = STATS_max
#if ( abs( STATS_min ) > abs( STATS_max ))
#	max = STATS_min

#set xrange [ STATS_min: STATS_max ]

lab =  sprintf( "Data\n".\
				"Entries:\t%G\n".\
				"Mean:\t%.1E\n".\
				"St. Dev:\t%.1E\n".\
				"Minimum:\t%.1E\n".\
				"Maximum:\t%.1E",\
				STATS_records,\
				STATS_mean,\
				STATS_stddev,\
				STATS_min,\
				STATS_max)

#set label right
#set label lab at .6 * STATS_max, 2500

#plot exp( - x /STATS_mean ) / STATS_mean title "exp( - t/t_0) / t_0 ",\
#plot exp( - ((x - STATS_mean)**2)/(2 * STATS_stddev**2 ) ) / (sqrt(2 * pi) * STATS_stddev), \

#do for [ name in "x11" ] {
#	set terminal name
#}

# Trova automaticamente il dominio
set autoscale

plot filename.".dat" using ( bin( $1, binwidth ) ):(1.0 / Norm ) smooth freq with boxes title lab

unset label
